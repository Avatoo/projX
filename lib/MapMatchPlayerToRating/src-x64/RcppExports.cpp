// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <Rcpp.h>

using namespace Rcpp;

// mapMatchPlayerToRating
std::vector<int> mapMatchPlayerToRating(NumericVector playerIdFromMatchDf, NumericVector dateFromMatchDf, DataFrame dfPlayerAttributes);
RcppExport SEXP _MapMatchPlayerToRating_mapMatchPlayerToRating(SEXP playerIdFromMatchDfSEXP, SEXP dateFromMatchDfSEXP, SEXP dfPlayerAttributesSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type playerIdFromMatchDf(playerIdFromMatchDfSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type dateFromMatchDf(dateFromMatchDfSEXP);
    Rcpp::traits::input_parameter< DataFrame >::type dfPlayerAttributes(dfPlayerAttributesSEXP);
    rcpp_result_gen = Rcpp::wrap(mapMatchPlayerToRating(playerIdFromMatchDf, dateFromMatchDf, dfPlayerAttributes));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_MapMatchPlayerToRating_mapMatchPlayerToRating", (DL_FUNC) &_MapMatchPlayerToRating_mapMatchPlayerToRating, 3},
    {NULL, NULL, 0}
};

RcppExport void R_init_MapMatchPlayerToRating(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
